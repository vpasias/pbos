chmod +x cloudlab-setup-ubuntu-tl.sh && ./cloudlab-setup-ubuntu-tl.sh && \
sudo apt-get install libvirt-bin genisoimage libguestfs-tools libosinfo-bin virtinst qemu-kvm git vim net-tools wget curl bash-completion python-pip libvirt-daemon-system virt-manager bridge-utils libnss-libvirt libvirt-clients osinfo-db-tools intltool sshpass ovmf genometools -y && \
sudo sed -i 's/hosts:          files dns/hosts:          files libvirt libvirt_guest dns/' /etc/nsswitch.conf && sudo lsmod | grep kvm && sudo reboot
#sudo systemctl restart libvirtd && sudo systemctl status libvirtd

screen
# Press Return to continue
# detach from session without killing it: Ctrl a d 
# to see screen sessions: screen -ls
# detach from closed session: screen -d -r 8265.pts-0.node0
# enter session: screen -r 8265.pts-0.node0
# exit a session and terminate it: exit

sudo -i
cd /mnt/extra && cat /sys/module/kvm_intel/parameters/nested && cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l && free -h && df -hT && sudo virsh list --all && sudo brctl show && \
wget -O "/mnt/extra/osinfo-db.tar.xz" https://releases.pagure.org/libosinfo/osinfo-db-20210903.tar.xz && sudo osinfo-db-import --local "/mnt/extra/osinfo-db.tar.xz"

# Create the iason user
sudo useradd iason -m -s /bin/bash && sudo usermod -aG sudo iason && echo "iason:iason" | chpasswd && echo "iason ALL=(root) NOPASSWD:ALL" | sudo tee -a /etc/sudoers.d/iason && \
sudo chmod 0440 /etc/sudoers.d/iason && su - iason

# Install dependencies
sudo apt update && sudo apt install software-properties-common -y && sudo add-apt-repository ppa:deadsnakes/ppa -y && sudo apt update && sudo apt install python3.8 -y && \
sudo apt install -y python3-venv dirmngr && \
sudo usermod -aG libvirt `id -un` && sudo adduser `id -un` libvirt-qemu && sudo adduser `id -un` kvm && sudo adduser `id -un` libvirt-dnsmasq && sudo sed -i 's/0770/0777/' /etc/libvirt/libvirtd.conf && \
echo 0 | sudo tee /sys/module/kvm/parameters/halt_poll_ns && echo 'security_driver = "none"' | sudo tee /etc/libvirt/qemu.conf && sudo chmod 0644 /boot/vmlinuz* && \
sudo systemctl restart libvirtd && sudo systemctl status libvirtd

exit

su - iason

virsh list --all && virsh net-list --all && virsh pool-list && python3 --version && python --version && python3.8 --version && mkdir -p /home/iason/images && mkdir -p /home/iason/vms

##################################################################################################################################################################################
######################################## Rocky Linux 8.5 cloud image creation (https://github.com/vpasias/pbos) #############################################################################################################
##################################################################################################################################################################################

cd /home/iason/images && curl -sLO http://download.rockylinux.org/pub/rocky/8/isos/x86_64/Rocky-8.5-x86_64-minimal.iso && ls -lah && \
cd ~ && git clone https://github.com/vpasias/pbos.git && cd /home/iason/pbos/rocky && chmod +x rocky_build.sh && ./rocky_build.sh

#virsh start rocky-linux-8
#virsh console rocky-linux-8
#localhost login: root

dnf -y update && dnf upgrade -y && \
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org && \
dnf install https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm -y && dnf --enablerepo=elrepo-kernel install kernel-lt -y
sleep 10 && systemctl reboot

#virsh console rocky-linux-8
#localhost login: root

git clone https://github.com/vpasias/pbos.git && \
cp /root/pbos/rocky/vm_config.sh . && chmod +x vm_config.sh && ./vm_config.sh && \
mv /etc/cloud/cloud.cfg /root/cloud.cfg.old && cp /root/pbos/rocky/cloud.cfg /etc/cloud/cloud.cfg && systemctl enable cloud-init sshd && sleep 10 && \
cp /root/pbos/rocky/cleanup.sh . && chmod +x cleanup.sh && ./cleanup.sh && rm -f cleanup.sh && cd ~ && rm -rf /root/pbos && \
cat /dev/null > ~/.bash_history && history -c && shutdown -h now

sudo virt-sysprep -d rocky-linux-8

cd /home/iason/images && sudo chown iason:iason rocky-8.5-x86_64-genericcloud.qcow2 && mv rocky-8.5-x86_64-genericcloud.qcow2 rocky-8.5-x86_64-genericcloud.qcow2.new && \
qemu-img convert -O qcow2 rocky-8.5-x86_64-genericcloud.qcow2.new Rocky-8.5-x86_64-GenericCloud.qcow2 && ls -lah && cd ~

virsh undefine rocky-linux-8

##################################################################################################################################################################################
######################################## Robot4KVM (https://github.com/iorchard/robot4kvm) #############################################################################################################
##################################################################################################################################################################################

cd ~ && git clone https://github.com/iorchard/robot4kvm.git && cd /home/iason/robot4kvm && \
python3 -m venv ~/.envs/robot

source ~/.envs/robot/bin/activate
pip install wheel && pip install robotframework

sudo sed -i 's/Debian/Rocky Linux/' /home/iason/robot4kvm/data/grub && \
mv /home/iason/pbos/vm_man4rocky.sh /home/iason/robot4kvm/scripts/vm_man4rocky.sh && \
mv /home/iason/pbos/setup_rocky.robot /home/iason/robot4kvm/setup_rocky.robot && \
chmod +x /home/iason/pbos/vm_networks.sh && cp /home/iason/pbos/vm_networks.sh . && ./vm_networks.sh && \
cp /home/iason/pbos/props.py.pbos /home/iason/robot4kvm/props.py

read -s -p 'user pw: ' USERPW
#user pw: gprm8350
export USERPW && robot -d output setup_rocky.robot
# for i in {1..6}; do virsh shutdown node-$i; done && sleep 90 && virsh list --all && for i in {1..6}; do virsh start node-$i; done && sleep 90 && virsh list --all
#unset USERPW

for i in {1..6}; do ssh -o "StrictHostKeyChecking=no" rocky@node-$i "uname -a"; done

for i in {1..6}; do sshpass -p gprm8350 ssh -o StrictHostKeyChecking=no root@node-$i "hostnamectl set-hostname node-$i --static"; done && \
for i in {1..6}; do sshpass -p gprm8350 ssh -o "StrictHostKeyChecking=no" rocky@node-$i "ip a"; done && \
for i in {1..6}; do sshpass -p gprm8350 ssh -o "StrictHostKeyChecking=no" rocky@node-$i "uname -a"; done 

##################################################################################################################################################################################
######################################## PBOS Cluster based on Rocky Linux 8.5 (https://github.com/iorchard/pbos-ansible - https://github.com/vpasias/pbos) #############################################################################################################
##################################################################################################################################################################################

ssh rocky@node-1
#lsblk

### Install PBOS

git clone https://github.com/vpasias/pbos.git && git clone https://github.com/iorchard/pbos-ansible.git && \
python3 -m venv ~/.envs/pbos && source ~/.envs/pbos/bin/activate && \
python -m pip install -U pip && python -m pip install wheel && python -m pip install ansible pymysql openstacksdk && \
cd pbos-ansible && \
export MYSITE="pbos" && cp -a inventory/default inventory/$MYSITE && cp -a /home/rocky/pbos/hosts-rocky inventory/$MYSITE/hosts && sed "s/MYSITE/$MYSITE/" ansible.cfg.sample > ansible.cfg

./vault.sh
# set password for vault: gprm8350 - gprm8350

cp -a /home/rocky/pbos/vars-rocky.yml inventory/$MYSITE/group_vars/all/vars.yml

ansible -m ping all && ansible-galaxy role install --force --role-file requirements.yml && for i in {1..6}; do sshpass -p gprm8350 ssh -o StrictHostKeyChecking=no root@node-$i "sudo groupadd rabbitmq"; done
#ansible-playbook /home/rocky/pbos/osd.yml

ansible-playbook site.yml

source ~/.bashrc

sudo ceph -s && sudo ceph health && sudo ceph osd status && sudo ceph df
openstack service list && openstack network agent list && openstack compute service list && openstack volume service list && \
openstack server list && openstack endpoint list && openstack catalog list && openstack image list && \
openstack flavor list && openstack network list && openstack subnet list && openstack project list && openstack port list && openstack user list && \
openstack hypervisor list && openstack volume list && openstack floating ip list

# Testing
# ./scripts/openstack_test.sh
# VM IP = 192.168.22.211
# ssh cirros@192.168.22.211
# login account is: cirros. The password is: gocubsgo

##################################################################################################################################################################################
### Delete ###
##################################################################################################################################################################################
# To tear down VMs.:
robot -d output teardown.robot && rm -rf output/*.*  && \
virsh net-destroy mgmt && rm -rf /home/iason/vms/mgmt.xml && virsh net-undefine mgmt && \
virsh net-destroy external && rm -rf /home/iason/vms/external.xml && virsh net-undefine external && \
virsh net-destroy overlay && rm -rf /home/iason/vms/overlay.xml && virsh net-undefine overlay && \
virsh net-destroy storage && rm -rf /home/iason/vms/storage.xml && virsh net-undefine storage && \
virsh net-destroy provider && rm -rf /home/iason/vms/provider.xml && virsh net-undefine provider && \
rm -rf /iason/.ssh/known_hosts && touch /iason/.ssh/known_hosts && \
virsh list --all && sudo brctl show && virsh net-list --all
